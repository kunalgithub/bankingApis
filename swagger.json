{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/kunalgithub/Bank-API/1.0.0"
  } ],
  "info" : {
    "description" : "These are sample APIs for typical Banking Platform\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n",
    "version" : "1.0.0",
    "title" : "Banking (Channel , Correlation id )",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "apiteam@swagger.io"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "Online Banking",
    "description" : "Online Banking",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "store",
    "description" : "Access to Petstore orders"
  }, {
    "name" : "user",
    "description" : "Operations about user",
    "externalDocs" : {
      "description" : "Find out more about our store",
      "url" : "http://swagger.io"
    }
  } ],
  "paths" : {
    "/accounts" : {
      "get" : {
        "tags" : [ "getAccounts" ],
        "summary" : "Retrives Accounts for a UserName- User Name will be retrieved from SessionId",
        "operationId" : "getAccounts",
        "parameters" : [ {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The name that needs to be fetched. Use user1 for testing.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channel",
          "in" : "header",
          "description" : "This is channel Indicator like Branch,Online",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "correlationId",
          "in" : "header",
          "description" : "This is channel Indicator like Branch,Online",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/accountIdsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request Like Session Id doesnt exist"
          },
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:pets", "read:pets" ]
        } ]
      }
    },
    "/accounts/id/{accountId}/details" : {
      "get" : {
        "tags" : [ "getAccountDetailsById" ],
        "summary" : "Retrives Accounts Details by Id",
        "operationId" : "getAccounts",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "The name that needs to be fetched. Use user1 for testing.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channel",
          "in" : "header",
          "description" : "This is channel Indicator like Branch,Online",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The name that needs to be fetched. Use user1 for testing.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "correlationId",
          "in" : "header",
          "description" : "This is channel Indicator like Branch,Online",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/accountDetailsResponse"
                }
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:pets", "read:pets" ]
        } ]
      }
    },
    "/preferences/alerts" : {
      "get" : {
        "tags" : [ "AlertPreferences" ],
        "summary" : "Get Alert Preferences",
        "description" : "Get Alert Preferences",
        "operationId" : "GetAlertPreferences",
        "parameters" : [ {
          "name" : "channel",
          "in" : "header",
          "description" : "This is channel Indicator like Branch,Online",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The name that needs to be fetched. Use user1 for testing.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "correlationId",
          "in" : "header",
          "description" : "This is channel Indicator like Branch,Online",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/alertPreferencesResponse"
                }
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:pets", "read:pets" ]
        } ]
      },
      "put" : {
        "tags" : [ "Update Preferences" ],
        "summary" : "Update Alert Preferences",
        "description" : "Update Preferences",
        "operationId" : "Update Alert Preferences",
        "parameters" : [ {
          "name" : "channel",
          "in" : "header",
          "description" : "This is channel Indicator like Branch,Online",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The name that needs to be fetched. Use user1 for testing.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "correlationId",
          "in" : "header",
          "description" : "This is channel Indicator like Branch,Online",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/alertPreferencesResponse"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Invalid user supplied"
          },
          "200" : {
            "description" : "Update SuccessFul"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      }
    },
    "/session" : {
      "post" : {
        "tags" : [ "CreateSession" ],
        "summary" : "Creates Session for User",
        "operationId" : "Create Session",
        "parameters" : [ {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The name that needs to be fetched. Use user1 for testing.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channel",
          "in" : "header",
          "description" : "This is channel Indicator like Branch,Online",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "correlationId",
          "in" : "header",
          "description" : "This is channel Indicator like Branch,Online",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/accountIdsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request Like Session Id doesnt exist"
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  },
  "components" : {
    "schemas" : {
      "Order" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "petId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "shipDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string",
            "description" : "Order Status",
            "enum" : [ "placed", "approved", "delivered" ]
          },
          "complete" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "xml" : {
          "name" : "Order"
        }
      },
      "Category" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Category"
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "username" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "userStatus" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "User Status"
          }
        },
        "xml" : {
          "name" : "User"
        }
      },
      "Tag" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Tag"
        }
      },
      "Pet" : {
        "type" : "object",
        "required" : [ "name", "photoUrls" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "name" : {
            "type" : "string",
            "example" : "doggie"
          },
          "photoUrls" : {
            "type" : "array",
            "xml" : {
              "name" : "photoUrl",
              "wrapped" : true
            },
            "items" : {
              "type" : "string"
            }
          },
          "tags" : {
            "type" : "array",
            "xml" : {
              "name" : "tag",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "pet status in the store",
            "enum" : [ "available", "pending", "sold" ]
          }
        },
        "xml" : {
          "name" : "Pet"
        }
      },
      "ApiResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "Session" : {
        "type" : "object",
        "properties" : {
          "sessionId" : {
            "type" : "string"
          }
        }
      },
      "accountIdsResponse" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string"
            },
            "accountType" : {
              "type" : "string"
            }
          }
        }
      },
      "accountDetailsResponse" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string"
            },
            "accountBalance" : {
              "type" : "string"
            },
            "accountName" : {
              "type" : "string"
            }
          }
        }
      },
      "alertPreferencesResponse" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "debitLimit" : {
              "type" : "string"
            },
            "creditLimit" : {
              "type" : "string"
            },
            "overdraft" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "requestBodies" : {
      "Pet" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Pet"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/Pet"
            }
          }
        },
        "description" : "Pet object that needs to be added to the store",
        "required" : true
      },
      "UserArray" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        },
        "description" : "List of user object",
        "required" : true
      }
    },
    "securitySchemes" : {
      "petstore_auth" : {
        "type" : "oauth2",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "http://petstore.swagger.io/oauth/dialog",
            "scopes" : {
              "write:pets" : "modify pets in your account",
              "read:pets" : "read your pets"
            }
          }
        }
      },
      "api_key" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "header"
      }
    }
  }
}
